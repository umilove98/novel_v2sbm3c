<?xml version="1.0" encoding="UTF-8"?>
 
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<!-- dev.mvc.cate.CateDAOInter 패키지에 등록된 interface 명시,
      패키지명과 인터페이스명은 실제로 존재해야함,
      Spring이 내부적으로 자동으로 interface를 구현해줌. -->
<mapper namespace="dev.mvc.report.ReportDAOInter">
  <!-- 
  insert: INSERT SQL 실행
  id: Spring에서 호출시 사용
  parameterType: 전달받는 데이터 객체의 타입
  return: 등록한 레코드 갯수 리턴
  SQL선언시 ';'은 삭제
  #{name}: VO class의 public String getName() 자동 호출
   --> 
  <insert id="create" parameterType="dev.mvc.report.ReportVO">
    INSERT INTO report(reportno, memberid, title, author, maincharacter, favoriteline, content,
                                 file1, file1saved, thumb1, size1, rdate)
    VALUES(contents_seq.nextval, #{memberid}, #{title}, #{author}, #{maincharacter}, #{favoriteline}, #{content},
            #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate)
  </insert> 
  
    <!-- 
  전체 목록
  레코드 갯수 만큼 CateVO 객체를 만들어 ArrayList에 저장하여 리턴,
  List<CateVO> list = new ArrayList<CateVO>(); 
  -->
  <select id="list_all" resultType="dev.mvc.report.ReportVO">
    SELECT reportno, memberid, title, author, maincharacter, favoriteline, content, recom, cnt
           file1, file1saved, thumb1, size1
    FROM report
    ORDER BY reportno ASC
  </select>
  
    <!-- 조회, id: read, 입력: reportsno, 리턴: ReportVO -->
  <select id="read" resultType="dev.mvc.report.ReportVO" parameterType="int">
    SELECT reportno, memberid, title, author, maincharacter, favoriteline, content, recom, cnt,
           file1, file1saved, thumb1, size1
    FROM report
    WHERE reportno = #{reportno}
  </select>  
  
  <!-- 수정 처리 -->
  <update id="update_text" parameterType="dev.mvc.report.ReportVO">
    UPDATE report
    SET title=#{title}, maincharacter=#{maincharacter}, favoriteline=#{favoriteline}, content=#{content}
    WHERE reportno=#{reportno}
  </update>
  
    <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.report.ReportVO">
    UPDATE report
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE reportno = #{reportno}
  </update>
  
  <!-- 삭제, return: int -->
  <delete id="delete" parameterType="int">
    DELETE FROM report
    WHERE reportno = #{reportno}
  </delete>   
  
  <!-- 조회 수 증가 -->
  <update id="update_cnt_add" parameterType="int">
    UPDATE report
    SET cnt = cnt + 1
    WHERE reportno = #{reportno}
  </update>
  

  
  
  
</mapper>