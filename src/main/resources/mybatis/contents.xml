<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- contents.xml과 연동되는 Spring interface "dev.mvc.contents.ContentsDAOInter" 선언 --> 
<mapper namespace="dev.mvc.contents.ContentsDAOInter">
  <!-- 커뮤니티(공지사항, 게시판, 자료실, 갤러리,  Q/A...)글 등록  -->
   <insert id="create" parameterType="dev.mvc.contents.ContentsVO">
		INSERT INTO contents(contentsno, adminno, cateno, title, content, passwd, word,
		                              file1, file1saved, thumb1, size1, rdate)
		VALUES(contents_seq.nextval, #{adminno}, #{cateno}, #{title}, #{content}, #{passwd}, #{word},
		           #{file1}, #{file1saved}, #{thumb1}, #{size1}, sysdate)
  </insert>
  
  <!-- 쇼핑몰의 상품 정보 등록  -->
<!--   <insert id="create" parameterType="dev.mvc.contents.ContentsVO">
		INSERT INTO contents(contentsno, adminno, cateno, title, content,
		                              recom, cnt, replycnt, passwd, word, rdate,
		                              file1, file1saved, thumb1, size1,
		                              price, dc, saleprice, point, salecnt)
		VALUES(contents_seq.nextval, #{adminno}, #{cateno}, #{title}, #{content},
		           #{recom}, #{cnt}, #{replycnt}, #{passwd}, #{word}, sysdate,
		           #{file1}, #{file1saved}, #{thumb1}, #{size1},
		           #{price}, #{dc}, #{saleprice}, #{point}, #{salecnt})
  </insert> -->
  
  <!-- 특정 카테고리의 등록된 글목록 -->
  <select id="list_by_cateno" resultType="dev.mvc.contents.ContentsVO" parameterType="int">
    SELECT contentsno, adminno, cateno, title, content, recom, cnt, replycnt, rdate,
              file1, file1saved, thumb1, size1, youtube
    FROM contents 
    WHERE cateno = #{cateno}
    ORDER BY contentsno DESC
  </select>
  
  <!-- 조회, id: read, 입력: cateno, 리턴: ContentsVO -->
  <select id="read" resultType="dev.mvc.contents.ContentsVO" parameterType="int">
		SELECT contentsno, adminno, cateno, title, content, recom, cnt, replycnt, word, rdate,
		           file1, file1saved, thumb1, size1, youtube
		FROM contents
		WHERE contentsno = #{contentsno}
  </select>
  
  <!-- Youtube 등록, 수정, 삭제 -->
  <update id="youtube" parameterType="HashMap">
    UPDATE contents 
    SET youtube=#{youtube}
    WHERE contentsno=#{contentsno}
  </update>  
  
   <!-- 카테고리별 검색 목록 -->
  <select id="list_by_cateno_search" resultType="dev.mvc.contents.ContentsVO" parameterType="HashMap">
    SELECT contentsno, adminno, cateno, title, content, recom, cnt, replycnt, word, rdate,
            file1, file1saved, thumb1, size1, youtube
    FROM contents
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
        WHERE cateno=#{cateno}
      </when>
      <otherwise> <!-- 검색하는 경우 -->
        WHERE cateno=#{cateno} AND (UPPER(title) LIKE '%' || #{word} || '%' 
                                                  OR UPPER(content) LIKE '%' || #{word} || '%' 
                                                  OR UPPER(word) LIKE '%' || #{word} || '%')
      </otherwise>
    </choose>
    ORDER BY contentsno DESC   
  </select>
   
  <!-- 카테고리별 검색 레코드 갯수 -->
  <select id="search_count" resultType="int" parameterType="HashMap">
    SELECT COUNT(*) as cnt
    FROM contents
    <choose>
      <when test="word == null or word == ''"> <!-- 검색하지 않는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno}
      </when>
      <otherwise> <!-- 검색하는 경우의 레코드 갯수 -->
        WHERE cateno=#{cateno} AND (UPPER(title) LIKE '%' || #{word} || '%' 
                                                  OR UPPER(content) LIKE '%' || #{word} || '%' 
                                                  OR UPPER(word) LIKE '%' || #{word} || '%')
      </otherwise>
    </choose>
  </select>
  
  <!-- cate + contents INNER JOIN 목록 -->
  <select id="list_all" resultType="dev.mvc.contents.CateContentsVO">
        SELECT c.name,
                  t.contentsno, t.adminno, t.cateno, t.title, t.content, t.recom, t.cnt, t.replycnt, t.word, t.rdate,
                  t.file1, t.file1saved, t.thumb1, t.size1, t.youtube
        FROM cate c, contents t
        WHERE c.cateno = t.cateno
        ORDER BY t.contentsno DESC
  </select>
  
  <!-- 카테고리별 검색 목록 + 페이징 + 메인 이미지 -->   
  <select id="list_by_cateno_search_paging" resultType="dev.mvc.contents.ContentsVO" parameterType="HashMap">
   SELECT contentsno, adminno, cateno, title, content, recom, cnt, replycnt, rdate,
              file1, file1saved, thumb1, size1, youtube, r
   FROM (
              SELECT contentsno, adminno, cateno, title, content, recom, cnt, replycnt, rdate,
                         file1, file1saved, thumb1, size1, youtube, rownum as r
              FROM (
                        SELECT contentsno, adminno, cateno, title, content, recom, cnt, replycnt, rdate,
                                   file1, file1saved, thumb1, size1, youtube
                        FROM contents
                        <choose>
                          <when test="word == null or word == ''"> <!-- 검색하지 않는 경우 -->
                             WHERE cateno=#{cateno}
                          </when>
                          <otherwise>
                            WHERE cateno=#{cateno} AND (UPPER(title) LIKE '%' || #{word} || '%' 
                                                              OR UPPER(content) LIKE '%' || #{word} || '%' 
                                                              OR UPPER(word) LIKE '%' || #{word} || '%')
                          </otherwise>
                        </choose>
                        ORDER BY contentsno DESC
               )
    )
    WHERE <![CDATA[ r >= #{start_num} AND r <= #{end_num} ]]>
     
    <!--  1 page: WHERE r >= 1 AND r <= 10; 
            2 page: WHERE r >= 11 AND r <= 20;
            3 page: WHERE r >= 21 AND r <= 30; -->
     
  </select>   
  
  <!-- 글 수정 -->
  <update id="update_text" parameterType="dev.mvc.contents.ContentsVO">
    UPDATE contents
    SET title=#{title}, content=#{content},  word=#{word}
    WHERE contentsno = #{contentsno}
  </update>
  
  <!-- 파일 수정 -->
  <update id="update_file" parameterType="dev.mvc.contents.ContentsVO">
    UPDATE contents
    SET file1=#{file1}, file1saved=#{file1saved}, thumb1=#{thumb1}, size1=#{size1}
    WHERE contentsno = #{contentsno}
  </update>

  <delete id="delete" parameterType="int">
    DELETE FROM contents
    WHERE contentsno=#{contentsno}
  </delete>
  
</mapper>





